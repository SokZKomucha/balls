(()=>{"use strict";const e=40,t=["black","blue","orange","pink","red","white","yellow"];class i{constructor(e,t){Object.defineProperty(this,"position",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"color",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.position=e,this.color=t}clone(){return new i(this.position.clone(),this.color)}moveTo(e){this.position.x=e.x,this.position.y=e.y}}class o{constructor(){Object.defineProperty(this,"eventListeners",{enumerable:!0,configurable:!0,writable:!0,value:{}})}on(e,t){var i;const o=null!==(i=this.eventListeners[e])&&void 0!==i?i:new Set;o.add(t),this.eventListeners[e]=o}emit(e,t){var i;(null!==(i=this.eventListeners[e])&&void 0!==i?i:new Set).forEach((e=>e(t)))}}class n{constructor(e,t){Object.defineProperty(this,"x",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"y",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.x=e,this.y=t}clone(){return new n(this.x,this.y)}compareTo(e){return this.x===e.x&&this.y===e.y}toString(){return`(${this.x}, ${this.y})`}}var l,s;const r=document.getElementById("grid"),a=document.querySelectorAll(".next-ball"),h=document.querySelector("#highscore"),c=document.querySelector("#score"),d=new class{constructor(){Object.defineProperty(this,"canvas",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"context",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"eventEmitter",{enumerable:!0,configurable:!0,writable:!0,value:new o}),Object.defineProperty(this,"running",{enumerable:!0,configurable:!0,writable:!0,value:!0}),Object.defineProperty(this,"balls",{enumerable:!0,configurable:!0,writable:!0,value:[]}),Object.defineProperty(this,"canBeInteractedWith",{enumerable:!0,configurable:!0,writable:!0,value:!0}),Object.defineProperty(this,"highlightedPath",{enumerable:!0,configurable:!0,writable:!0,value:null}),Object.defineProperty(this,"highlightedPathColor",{enumerable:!0,configurable:!0,writable:!0,value:"rgb(242, 175, 170)"}),Object.defineProperty(this,"nextColors",{enumerable:!0,configurable:!0,writable:!0,value:[]}),Object.defineProperty(this,"selectedBallIndex",{enumerable:!0,configurable:!0,writable:!0,value:null}),this.canvas=document.createElement("canvas"),this.context=this.canvas.getContext("2d"),this.canvas.width=360,this.canvas.height=360,this.canvas.addEventListener("click",(e=>this.clickEvent(e))),this.canvas.addEventListener("mousemove",(e=>this.hoverEvent(e)))}clickEvent(t){if(!this.canBeInteractedWith)return;if(!this.running)return;const i=Math.floor(t.offsetX/e),o=Math.floor(t.offsetY/e),l=new n(i,o);if(this.highlightedPath=null,null===this.selectedBallIndex){const e=this.balls.findIndex((e=>e.position.compareTo(l)));if(-1===e)return;if(!this.canBeSelected(l))return;return this.selectedBallIndex=e,void this.render()}if(this.balls[this.selectedBallIndex].position.compareTo(l))return this.selectedBallIndex=null,void this.render();if(this.balls.find((e=>e.position.compareTo(l)))&&this.canBeSelected(l))return this.selectedBallIndex=this.balls.findIndex((e=>e.position.compareTo(l))),void this.render();const s=this.balls[this.selectedBallIndex].position.clone(),r=this.pathfind(s,l);if(0===r.length)return;this.balls[this.selectedBallIndex].moveTo(l),this.highlightedPathColor="rgb(200, 200, 200)",this.highlightedPath=r,this.canBeInteractedWith=!1,this.selectedBallIndex=null,this.render();const a=this.checkBallCrossings();setTimeout((()=>{this.canBeInteractedWith=!0,this.highlightedPath=null,0===a&&this.createNewBalls(),0!==a&&this.emit("onBallRemove",a);const e=this.checkBallCrossings();0!==e&&this.emit("onBallRemove",e),this.render()}),350)}hoverEvent(t){if(null==this.selectedBallIndex)return;if(!this.canBeInteractedWith)return;if(!this.running)return;const i=Math.floor(t.offsetX/e),o=Math.floor(t.offsetY/e),l=this.balls[this.selectedBallIndex].position.clone(),s=this.pathfind(l,new n(i,o));console.log(s),this.highlightedPathColor="rgb(242, 175, 170)",this.highlightedPath=new n(i,o).compareTo(l)?s.filter((e=>!e.compareTo(l))):s,this.render()}canBeSelected(e){const t=this.balls.filter((t=>t.position.compareTo(new n(e.x-1,e.y))||t.position.compareTo(new n(e.x+1,e.y))||t.position.compareTo(new n(e.x,e.y-1))||t.position.compareTo(new n(e.x,e.y+1))));return!(4===t.length||3===t.length&&[0,8].includes(e.x)||3===t.length&&[0,8].includes(e.y)||2===t.length&&[0,8].includes(e.x)&&[0,8].includes(e.y))}checkBallCrossings(){const e=[{dx:1,dy:0},{dx:0,dy:1},{dx:1,dy:1},{dx:1,dy:-1}],t=new Set;for(const i of this.balls)for(const o of e){const e=[i];let n=i.position.x+o.dx,l=i.position.y+o.dy;for(;n>=0&&n<9&&l>=0&&l<9;){const t=this.balls.find((e=>e.position.x===n&&e.position.y===l&&e.color===i.color));if(!t)break;e.push(t),n+=o.dx,l+=o.dy}e.length>=5&&e.forEach((e=>t.add(e.position.toString())))}return this.balls=this.balls.filter((e=>!t.has(e.position.toString()))),t.size}createInitialBalls(){for(let e=0;e<8;e++){const o=Math.floor(9*Math.random()),l=Math.floor(9*Math.random()),s=new n(o,l);if(this.balls.some((e=>e.position.compareTo(s)))){e--;continue}const r=t[Math.floor(Math.random()*t.length)];this.balls.push(new i(s,r))}for(let e=0;e<3;e++)this.nextColors[e]=t[Math.floor(Math.random()*t.length)];this.emit("onNewNextColors",this.nextColors)}createNewBalls(){if(this.balls.length+3>=81)return this.running=!1,void this.emit("onGameOver",void 0);for(let e=0;e<3;e++){const o=Math.floor(9*Math.random()),l=Math.floor(9*Math.random()),s=new n(o,l);this.balls.some((e=>e.position.compareTo(s)))?e--:(this.balls.push(new i(s,this.nextColors[e])),this.nextColors[e]=t[Math.floor(Math.random()*t.length)])}this.emit("onNewNextColors",this.nextColors)}pathfind(e,t){const i=[],o=new Set,l=new Map;for(i.push(e),o.add(e.toString()),l.set(e.toString(),null);i.length>0;){const e=i.shift();if(e.compareTo(t)){const t=[];let i=e;for(;i;)t.unshift(i),i=l.get(i.toString())||null;return t}for(const t of[[1,0],[-1,0],[0,1],[0,-1]]){const s=new n(e.x+t[0],e.y+t[1]),r=s.toString();!o.has(r)&&s.x>=0&&s.x<9&&s.y>=0&&s.y<9&&!this.balls.some((e=>e.position.compareTo(s)))&&(i.push(s),o.add(r),l.set(r,e))}}return[]}render(){this.context.clearRect(0,0,this.canvas.width,this.canvas.height),this.highlightedPath&&this.highlightedPath.forEach((t=>{this.context.fillStyle=this.highlightedPathColor,this.context.fillRect(t.x*e,t.y*e,e,e)})),this.balls.forEach((t=>{this.context.fillStyle=t.color,this.context.beginPath(),this.context.arc(t.position.x*e+20,t.position.y*e+20,null!==this.selectedBallIndex&&this.balls[this.selectedBallIndex].position.compareTo(t.position)?12.5:10,0,2*Math.PI),this.context.fill(),this.context.stroke(),this.context.closePath()}))}on(e,t){this.eventEmitter.on(e,t)}emit(e,t){this.eventEmitter.emit(e,t)}};let u=null!==(s=Number(null!==(l=localStorage.getItem("highscore"))&&void 0!==l?l:"0"))&&void 0!==s?s:0,f=0;r.appendChild(d.canvas),h.textContent=u.toString(),d.on("onNewNextColors",(e=>{e.forEach(((e,t)=>{a[t].style.backgroundColor=e}))})),d.on("onGameOver",(()=>{console.log("Game over!"),document.querySelector("#game-over").style.display="flex"})),d.on("onBallRemove",(e=>{f+=e,c.textContent=f.toString(),f>=u&&(u=f,localStorage.setItem("highscore",u.toString()),h.textContent=u.toString())})),d.createInitialBalls(),d.render()})();